%!PS-Adobe-2.0 EPSF-2.0
%%Title: CT174.eps
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Thu May 26 11:49:23 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 626 482
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 2 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 626 50 lineto 626 482 lineto 50 482 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (CT174.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (victor)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu May 26 11:49:23 2016)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 11520.00 8640.00 BoxColFill} if
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1.00 1.00 1.00 C 1.000 1851 950 8572 7040 BoxColFill
1.000 UL
LTb
1.000 UL
LTa
1851 950 M
8573 0 V
stroke
LTb
1851 950 M
88 0 V
stroke
0.00 0.00 0.00 C 1695 950 M
[ [(Courier) 200.0 0.0 true true 0 (-0.05)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1851 1830 M
8573 0 V
stroke
LTb
1851 1830 M
88 0 V
stroke
0.00 0.00 0.00 C 1695 1830 M
[ [(Courier) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1851 2710 M
8573 0 V
stroke
LTb
1851 2710 M
88 0 V
stroke
0.00 0.00 0.00 C 1695 2710 M
[ [(Courier) 200.0 0.0 true true 0 (0.05)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1851 3590 M
8573 0 V
stroke
LTb
1851 3590 M
88 0 V
stroke
0.00 0.00 0.00 C 1695 3590 M
[ [(Courier) 200.0 0.0 true true 0 (0.1)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1851 4471 M
8573 0 V
stroke
LTb
1851 4471 M
88 0 V
stroke
0.00 0.00 0.00 C 1695 4471 M
[ [(Courier) 200.0 0.0 true true 0 (0.15)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1851 5351 M
8573 0 V
stroke
LTb
1851 5351 M
88 0 V
stroke
0.00 0.00 0.00 C 1695 5351 M
[ [(Courier) 200.0 0.0 true true 0 (0.2)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1851 6231 M
8573 0 V
stroke
LTb
1851 6231 M
88 0 V
stroke
0.00 0.00 0.00 C 1695 6231 M
[ [(Courier) 200.0 0.0 true true 0 (0.25)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1851 7111 M
8573 0 V
stroke
LTb
1851 7111 M
88 0 V
stroke
0.00 0.00 0.00 C 1695 7111 M
[ [(Courier) 200.0 0.0 true true 0 (0.3)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1851 7991 M
8573 0 V
stroke
LTb
1851 7991 M
88 0 V
stroke
0.00 0.00 0.00 C 1695 7991 M
[ [(Courier) 200.0 0.0 true true 0 (0.35)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1851 950 M
0 7041 V
stroke
LTb
1851 950 M
0 88 V
stroke
0.00 0.00 0.00 C 1851 690 M
[ [(Courier) 200.0 0.0 true true 0 (-20)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2923 950 M
0 7041 V
stroke
LTb
2923 950 M
0 88 V
stroke
0.00 0.00 0.00 C 2923 690 M
[ [(Courier) 200.0 0.0 true true 0 (-15)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3994 950 M
0 7041 V
stroke
LTb
3994 950 M
0 88 V
stroke
0.00 0.00 0.00 C 3994 690 M
[ [(Courier) 200.0 0.0 true true 0 (-10)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5066 950 M
0 6348 V
0 630 R
0 63 V
stroke
LTb
5066 950 M
0 88 V
stroke
0.00 0.00 0.00 C 5066 690 M
[ [(Courier) 200.0 0.0 true true 0 (-5)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6138 950 M
0 6348 V
0 630 R
0 63 V
stroke
LTb
6138 950 M
0 88 V
stroke
0.00 0.00 0.00 C 6138 690 M
[ [(Courier) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
7209 950 M
0 6348 V
0 630 R
0 63 V
stroke
LTb
7209 950 M
0 88 V
stroke
0.00 0.00 0.00 C 7209 690 M
[ [(Courier) 200.0 0.0 true true 0 (5)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
8281 950 M
0 7041 V
stroke
LTb
8281 950 M
0 88 V
stroke
0.00 0.00 0.00 C 8281 690 M
[ [(Courier) 200.0 0.0 true true 0 (10)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
9352 950 M
0 7041 V
stroke
LTb
9352 950 M
0 88 V
stroke
0.00 0.00 0.00 C 9352 690 M
[ [(Courier) 200.0 0.0 true true 0 (15)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
10424 950 M
0 7041 V
stroke
LTb
10424 950 M
0 88 V
stroke
0.00 0.00 0.00 C 10424 690 M
[ [(Courier) 200.0 0.0 true true 0 (20)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1851 7991 M
0 -7041 V
8573 0 V
0 7041 R
-8573 0 R
stroke
0.00 0.00 0.00 C 629 4470 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Courier) 320.0 0.0 true true 0 (C)]
[(Courier) 256.0 -96.0 true true 0 (T)]
] -74.7 MCshow
grestore
LTb
0.00 0.00 0.00 C 6137 300 M
[ [(Courier) 320.0 0.0 true true 0 (Angle of attack )]
[(Symbol) 320.0 0.0 true true 0 (a)]
[(Courier) 320.0 0.0 true true 0 ( [)]
[(Symbol) 320.0 0.0 true true 0 (\260)]
[(Courier) 320.0 0.0 true true 0 (])]
] -106.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LTb
4468 7298 N
0 630 V
3338 0 V
0 -630 V
-3338 0 V
Z stroke
% Begin plot #1
1.667 UP
2.000 UL
LT0
0.00 0.00 1.00 C 0.00 0.00 0.00 C 6808 7771 M
[ [(Courier) 320.0 0.0 true true 0 (   experimental)]
] -106.7 MRshow
LT0
0.00 0.00 1.00 C 6964 7771 M
687 0 V
2514 6331 M
-92 -129 V
62 -210 V
10 -94 V
0 -187 V
11 -234 V
31 -117 V
0 -140 V
93 -187 V
0 -164 V
21 -105 V
175 -292 V
93 -70 V
51 -105 V
93 -152 V
155 -105 V
72 -106 V
175 -93 V
175 -128 V
216 -164 V
247 -128 V
134 -129 V
186 -81 V
164 -117 V
62 -105 V
144 -152 V
124 -70 V
93 -93 V
103 -82 V
144 -105 V
288 -245 V
206 -117 V
289 -93 V
133 -47 V
175 -105 V
237 82 V
175 47 V
195 94 V
186 106 V
195 129 V
10 81 V
124 59 V
72 129 V
174 176 V
31 46 V
196 200 V
-1 128 V
62 129 V
164 234 V
113 141 V
31 105 V
113 339 V
103 129 V
92 211 V
21 70 V
30 164 V
31 82 V
52 105 V
20 93 V
51 118 V
41 175 V
21 23 V
113 141 V
41 94 V
72 198 V
113 211 V
31 141 V
20 105 V
21 82 V
41 140 V
61 82 V
52 129 V
51 199 V
61 117 V
21 35 V
51 35 V
62 -82 V
72 -128 V
32 -164 V
10 -152 V
-82 -222 V
-72 -82 V
-20 -176 V
-31 -117 V
-21 -210 V
-71 -141 V
-62 -164 V
-82 -187 V
-31 -152 V
-82 -176 V
-41 -117 V
9093 4586 L
-72 -117 V
-52 -94 V
-92 -187 V
-52 -106 V
8651 3883 L
-72 -117 V
-72 -70 V
8363 3555 L
-52 -46 V
-92 -82 V
8096 3309 L
7931 3110 L
-62 -58 V
-133 -82 V
7540 2817 L
-10 -35 V
7386 2677 L
7252 2560 L
-82 -24 V
7057 2419 L
-154 -70 V
-93 -47 V
6594 2126 L
-134 -47 V
-61 -129 V
-196 -12 V
-92 -47 V
-113 12 V
-258 46 V
-134 35 V
-61 12 V
-144 -24 V
-124 35 V
-124 129 V
-164 93 V
-114 94 V
-72 105 V
-82 58 V
-175 164 V
-31 105 V
-186 269 V
-103 163 V
-93 129 V
-144 350 V
-144 199 V
-52 58 V
-72 164 V
-196 281 V
-114 339 V
-93 257 V
-72 163 V
-72 152 V
-134 222 V
-93 187 V
-51 211 V
-104 222 V
-61 117 V
-62 117 V
-72 11 V
2514 6331 Circle
2422 6202 Circle
2484 5992 Circle
2494 5898 Circle
2494 5711 Circle
2505 5477 Circle
2536 5360 Circle
2536 5220 Circle
2629 5033 Circle
2629 4869 Circle
2650 4764 Circle
2825 4472 Circle
2918 4402 Circle
2969 4297 Circle
3062 4145 Circle
3217 4040 Circle
3289 3934 Circle
3464 3841 Circle
3639 3713 Circle
3855 3549 Circle
4102 3421 Circle
4236 3292 Circle
4422 3211 Circle
4586 3094 Circle
4648 2989 Circle
4792 2837 Circle
4916 2767 Circle
5009 2674 Circle
5112 2592 Circle
5256 2487 Circle
5544 2242 Circle
5750 2125 Circle
6039 2032 Circle
6172 1985 Circle
6347 1880 Circle
6584 1962 Circle
6759 2009 Circle
6954 2103 Circle
7140 2209 Circle
7335 2338 Circle
7345 2419 Circle
7469 2478 Circle
7541 2607 Circle
7715 2783 Circle
7746 2829 Circle
7942 3029 Circle
7941 3157 Circle
8003 3286 Circle
8167 3520 Circle
8280 3661 Circle
8311 3766 Circle
8424 4105 Circle
8527 4234 Circle
8619 4445 Circle
8640 4515 Circle
8670 4679 Circle
8701 4761 Circle
8753 4866 Circle
8773 4959 Circle
8824 5077 Circle
8865 5252 Circle
8886 5275 Circle
8999 5416 Circle
9040 5510 Circle
9112 5708 Circle
9225 5919 Circle
9256 6060 Circle
9276 6165 Circle
9297 6247 Circle
9338 6387 Circle
9399 6469 Circle
9451 6598 Circle
9502 6797 Circle
9563 6914 Circle
9584 6949 Circle
9635 6984 Circle
9697 6902 Circle
9769 6774 Circle
9801 6610 Circle
9811 6458 Circle
9729 6236 Circle
9657 6154 Circle
9637 5978 Circle
9606 5861 Circle
9585 5651 Circle
9514 5510 Circle
9452 5346 Circle
9370 5159 Circle
9339 5007 Circle
9257 4831 Circle
9216 4714 Circle
9093 4586 Circle
9021 4469 Circle
8969 4375 Circle
8877 4188 Circle
8825 4082 Circle
8651 3883 Circle
8579 3766 Circle
8507 3696 Circle
8363 3555 Circle
8311 3509 Circle
8219 3427 Circle
8096 3309 Circle
7931 3110 Circle
7869 3052 Circle
7736 2970 Circle
7540 2817 Circle
7530 2782 Circle
7386 2677 Circle
7252 2560 Circle
7170 2536 Circle
7057 2419 Circle
6903 2349 Circle
6810 2302 Circle
6594 2126 Circle
6460 2079 Circle
6399 1950 Circle
6203 1938 Circle
6111 1891 Circle
5998 1903 Circle
5740 1949 Circle
5606 1984 Circle
5545 1996 Circle
5401 1972 Circle
5277 2007 Circle
5153 2136 Circle
4989 2229 Circle
4875 2323 Circle
4803 2428 Circle
4721 2486 Circle
4546 2650 Circle
4515 2755 Circle
4329 3024 Circle
4226 3187 Circle
4133 3316 Circle
3989 3666 Circle
3845 3865 Circle
3793 3923 Circle
3721 4087 Circle
3525 4368 Circle
3411 4707 Circle
3318 4964 Circle
3246 5127 Circle
3174 5279 Circle
3040 5501 Circle
2947 5688 Circle
2896 5899 Circle
2792 6121 Circle
2731 6238 Circle
2669 6355 Circle
2597 6366 Circle
7307 7771 Circle
% End plot #1
% Begin plot #2
2.000 UL
LT0
1.00 0.00 0.00 C 0.00 0.00 0.00 C 6808 7456 M
[ [(Courier) 320.0 0.0 true true 0 (   simulated)]
] -106.7 MRshow
LT0
1.00 0.00 0.00 C 6964 7456 M
687 0 V
5904 1684 M
676 82 V
656 408 V
611 690 V
544 863 V
462 907 V
374 831 V
284 666 V
198 449 V
117 217 V
45 -31 V
-22 -228 V
-79 -357 V
9641 5749 L
9468 5285 L
9256 4814 L
9013 4350 L
8741 3900 L
8447 3467 L
8133 3049 L
7803 2655 L
7461 2305 L
7109 2020 L
6750 1812 L
6386 1696 L
-365 -22 V
-364 95 V
-361 198 V
-355 301 V
-346 397 V
-335 472 V
-320 531 V
-302 561 V
-280 569 V
-254 544 V
-224 488 V
-188 400 V
-146 274 V
-98 105 V
-43 -62 V
20 -220 V
90 -365 V
168 -489 V
252 -591 V
341 -664 V
431 -701 V
515 -684 V
588 -607 V
643 -417 V
673 -135 V
% End plot #2
1.000 UP
stroke
1.000 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Courier Helvetica
