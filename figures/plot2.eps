%!PS-Adobe-2.0 EPSF-2.0
%%Title: plot2.eps
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Tue May 17 13:14:06 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 626 482
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 2 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -106 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 626 50 lineto 626 482 lineto 50 482 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plot2.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (victor)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue May 17 13:14:06 2016)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 320 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 11520.00 8640.00 BoxColFill} if
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1.00 1.00 1.00 C 1.000 1760 1024 9182 7230 BoxColFill
2.000 UL
LTb
2.000 UL
LTa
1760 1024 M
9183 0 V
stroke
LTb
1760 1024 M
88 0 V
9095 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1568 1024 M
[ [(Courier) 320.0 0.0 true true 0 (-0.05)]
] -106.7 MRshow
2.000 UL
LTb
2.000 UL
LTa
1760 1928 M
9183 0 V
stroke
LTb
1760 1928 M
88 0 V
9095 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1568 1928 M
[ [(Courier) 320.0 0.0 true true 0 (0)]
] -106.7 MRshow
2.000 UL
LTb
2.000 UL
LTa
1760 2832 M
9183 0 V
stroke
LTb
1760 2832 M
88 0 V
9095 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1568 2832 M
[ [(Courier) 320.0 0.0 true true 0 (0.05)]
] -106.7 MRshow
2.000 UL
LTb
2.000 UL
LTa
1760 3736 M
9183 0 V
stroke
LTb
1760 3736 M
88 0 V
9095 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1568 3736 M
[ [(Courier) 320.0 0.0 true true 0 (0.1)]
] -106.7 MRshow
2.000 UL
LTb
2.000 UL
LTa
1760 4640 M
9183 0 V
stroke
LTb
1760 4640 M
88 0 V
9095 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1568 4640 M
[ [(Courier) 320.0 0.0 true true 0 (0.15)]
] -106.7 MRshow
2.000 UL
LTb
2.000 UL
LTa
1760 5543 M
9183 0 V
stroke
LTb
1760 5543 M
88 0 V
9095 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1568 5543 M
[ [(Courier) 320.0 0.0 true true 0 (0.2)]
] -106.7 MRshow
2.000 UL
LTb
2.000 UL
LTa
1760 6447 M
2352 0 V
4478 0 R
2353 0 V
stroke
LTb
1760 6447 M
88 0 V
9095 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1568 6447 M
[ [(Courier) 320.0 0.0 true true 0 (0.25)]
] -106.7 MRshow
2.000 UL
LTb
2.000 UL
LTa
1760 7351 M
2352 0 V
4478 0 R
2353 0 V
stroke
LTb
1760 7351 M
88 0 V
9095 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1568 7351 M
[ [(Courier) 320.0 0.0 true true 0 (0.3)]
] -106.7 MRshow
2.000 UL
LTb
2.000 UL
LTa
1760 8255 M
9183 0 V
stroke
LTb
1760 8255 M
88 0 V
9095 0 R
-88 0 V
stroke
0.00 0.00 0.00 C 1568 8255 M
[ [(Courier) 320.0 0.0 true true 0 (0.35)]
] -106.7 MRshow
2.000 UL
LTb
2.000 UL
LTa
1760 1024 M
0 7231 V
stroke
LTb
1760 1024 M
0 88 V
0 7143 R
0 -88 V
stroke
0.00 0.00 0.00 C 1760 704 M
[ [(Courier) 320.0 0.0 true true 0 (-20)]
] -106.7 MCshow
2.000 UL
LTb
2.000 UL
LTa
2908 1024 M
0 7231 V
stroke
LTb
2908 1024 M
0 88 V
0 7143 R
0 -88 V
stroke
0.00 0.00 0.00 C 2908 704 M
[ [(Courier) 320.0 0.0 true true 0 (-15)]
] -106.7 MCshow
2.000 UL
LTb
2.000 UL
LTa
4056 1024 M
0 7231 V
stroke
LTb
4056 1024 M
0 88 V
0 7143 R
0 -88 V
stroke
0.00 0.00 0.00 C 4056 704 M
[ [(Courier) 320.0 0.0 true true 0 (-10)]
] -106.7 MCshow
2.000 UL
LTb
2.000 UL
LTa
5204 1024 M
0 4608 V
0 2560 R
0 63 V
stroke
LTb
5204 1024 M
0 88 V
0 7143 R
0 -88 V
stroke
0.00 0.00 0.00 C 5204 704 M
[ [(Courier) 320.0 0.0 true true 0 (-5)]
] -106.7 MCshow
2.000 UL
LTb
2.000 UL
LTa
6352 1024 M
0 4608 V
0 2560 R
0 63 V
stroke
LTb
6352 1024 M
0 88 V
0 7143 R
0 -88 V
stroke
0.00 0.00 0.00 C 6352 704 M
[ [(Courier) 320.0 0.0 true true 0 (0)]
] -106.7 MCshow
2.000 UL
LTb
2.000 UL
LTa
7499 1024 M
0 4608 V
0 2560 R
0 63 V
stroke
LTb
7499 1024 M
0 88 V
0 7143 R
0 -88 V
stroke
0.00 0.00 0.00 C 7499 704 M
[ [(Courier) 320.0 0.0 true true 0 (5)]
] -106.7 MCshow
2.000 UL
LTb
2.000 UL
LTa
8647 1024 M
0 7231 V
stroke
LTb
8647 1024 M
0 88 V
0 7143 R
0 -88 V
stroke
0.00 0.00 0.00 C 8647 704 M
[ [(Courier) 320.0 0.0 true true 0 (10)]
] -106.7 MCshow
2.000 UL
LTb
2.000 UL
LTa
9795 1024 M
0 7231 V
stroke
LTb
9795 1024 M
0 88 V
0 7143 R
0 -88 V
stroke
0.00 0.00 0.00 C 9795 704 M
[ [(Courier) 320.0 0.0 true true 0 (15)]
] -106.7 MCshow
2.000 UL
LTb
2.000 UL
LTa
10943 1024 M
0 7231 V
stroke
LTb
10943 1024 M
0 88 V
0 7143 R
0 -88 V
stroke
0.00 0.00 0.00 C 10943 704 M
[ [(Courier) 320.0 0.0 true true 0 (20)]
] -106.7 MCshow
2.000 UL
LTb
2.000 UL
LTb
1760 8255 N
0 -7231 V
9183 0 V
0 7231 V
-9183 0 V
Z stroke
0.00 0.00 0.00 C 256 4639 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Courier) 320.0 0.0 true true 0 (C)]
[(Courier) 256.0 -96.0 true true 0 (T)]
] -74.7 MCshow
grestore
LTb
0.00 0.00 0.00 C 6351 224 M
[ [(Courier) 320.0 0.0 true true 0 (Angle of attack )]
[(Symbol) 320.0 0.0 true true 0 (a)]
[(Courier) 320.0 0.0 true true 0 ( [)]
[(Symbol) 320.0 0.0 true true 0 (\260)]
[(Courier) 320.0 0.0 true true 0 (])]
] -106.7 MCshow
LTb
1.000 UP
2.000 UL
LTb
1.000 UL
LTb
4112 5632 N
0 2560 V
4478 0 V
0 -2560 V
-4478 0 V
Z stroke
% Begin plot #1
1.667 UP
5.000 UL
LT0
0.00 0.00 1.00 C 0.00 0.00 0.00 C 7376 7552 M
[ [(Courier) 320.0 0.0 true true 0 (   C)]
[(Courier) 256.0 -96.0 true true 0 (T)]
[(Courier) 320.0 0.0 true true 0 ( experimental)]
] -74.7 MRshow
LT0
0.00 0.00 1.00 C 7568 7552 M
831 0 V
2470 6550 M
-99 -132 V
67 -216 V
11 -96 V
0 -192 V
11 -241 V
34 -120 V
0 -144 V
99 -192 V
0 -168 V
23 -108 V
187 -300 V
100 -72 V
55 -108 V
99 -156 V
166 -108 V
77 -108 V
187 -96 V
188 -132 V
232 -168 V
264 -131 V
144 -132 V
198 -84 V
177 -120 V
66 -108 V
155 -156 V
132 -72 V
99 -96 V
111 -84 V
154 -108 V
309 -252 V
221 -119 V
309 -96 V
143 -48 V
187 -108 V
254 85 V
187 48 V
210 96 V
198 109 V
209 132 V
11 84 V
132 60 V
77 133 V
188 180 V
33 48 V
209 205 V
0 132 V
66 132 V
176 240 V
121 145 V
33 108 V
121 348 V
110 133 V
99 216 V
22 72 V
33 168 V
33 84 V
55 109 V
22 96 V
55 120 V
44 180 V
22 24 V
121 144 V
44 97 V
77 204 V
121 216 V
33 144 V
21 109 V
22 84 V
44 144 V
66 84 V
55 132 V
55 205 V
66 120 V
22 36 V
55 36 V
67 -84 V
77 -132 V
33 -168 V
11 -156 V
-88 -229 V
-77 -84 V
-22 -180 V
-32 -120 V
-22 -217 V
-77 -144 V
-66 -168 V
-88 -192 V
-33 -156 V
-88 -181 V
-44 -120 V
9517 4758 L
-77 -120 V
-55 -97 V
-99 -192 V
-55 -108 V
9044 4036 L
-77 -120 V
-78 -72 V
8735 3700 L
-55 -48 V
-99 -85 V
8449 3447 L
8273 3243 L
-66 -60 V
-144 -85 V
7854 2942 L
-11 -36 V
7689 2797 L
7546 2677 L
-88 -24 V
7336 2533 L
-165 -73 V
-99 -48 V
6841 2232 L
-144 -48 V
-66 -133 V
-209 -12 V
-99 -48 V
-121 12 V
-276 47 V
-143 36 V
-67 12 V
-154 -24 V
-132 36 V
-133 132 V
-176 96 V
-121 96 V
-78 108 V
-88 60 V
-188 167 V
-33 109 V
-199 276 V
-110 168 V
-99 132 V
-155 360 V
-155 204 V
-55 60 V
-77 168 V
-210 288 V
-122 348 V
-99 264 V
-77 168 V
-78 156 V
-143 228 V
-100 192 V
-55 216 V
-111 228 V
-66 120 V
-66 121 V
-77 11 V
2470 6550 Circle
2371 6418 Circle
2438 6202 Circle
2449 6106 Circle
2449 5914 Circle
2460 5673 Circle
2494 5553 Circle
2494 5409 Circle
2593 5217 Circle
2593 5049 Circle
2616 4941 Circle
2803 4641 Circle
2903 4569 Circle
2958 4461 Circle
3057 4305 Circle
3223 4197 Circle
3300 4089 Circle
3487 3993 Circle
3675 3861 Circle
3907 3693 Circle
4171 3562 Circle
4315 3430 Circle
4513 3346 Circle
4690 3226 Circle
4756 3118 Circle
4911 2962 Circle
5043 2890 Circle
5142 2794 Circle
5253 2710 Circle
5407 2602 Circle
5716 2350 Circle
5937 2231 Circle
6246 2135 Circle
6389 2087 Circle
6576 1979 Circle
6830 2064 Circle
7017 2112 Circle
7227 2208 Circle
7425 2317 Circle
7634 2449 Circle
7645 2533 Circle
7777 2593 Circle
7854 2726 Circle
8042 2906 Circle
8075 2954 Circle
8284 3159 Circle
8284 3291 Circle
8350 3423 Circle
8526 3663 Circle
8647 3808 Circle
8680 3916 Circle
8801 4264 Circle
8911 4397 Circle
9010 4613 Circle
9032 4685 Circle
9065 4853 Circle
9098 4937 Circle
9153 5046 Circle
9175 5142 Circle
9230 5262 Circle
9274 5442 Circle
9296 5466 Circle
9417 5610 Circle
9461 5707 Circle
9538 5911 Circle
9659 6127 Circle
9692 6271 Circle
9713 6380 Circle
9735 6464 Circle
9779 6608 Circle
9845 6692 Circle
9900 6824 Circle
9955 7029 Circle
10021 7149 Circle
10043 7185 Circle
10098 7221 Circle
10165 7137 Circle
10242 7005 Circle
10275 6837 Circle
10286 6681 Circle
10198 6452 Circle
10121 6368 Circle
10099 6188 Circle
10067 6068 Circle
10045 5851 Circle
9968 5707 Circle
9902 5539 Circle
9814 5347 Circle
9781 5191 Circle
9693 5010 Circle
9649 4890 Circle
9517 4758 Circle
9440 4638 Circle
9385 4541 Circle
9286 4349 Circle
9231 4241 Circle
9044 4036 Circle
8967 3916 Circle
8889 3844 Circle
8735 3700 Circle
8680 3652 Circle
8581 3567 Circle
8449 3447 Circle
8273 3243 Circle
8207 3183 Circle
8063 3098 Circle
7854 2942 Circle
7843 2906 Circle
7689 2797 Circle
7546 2677 Circle
7458 2653 Circle
7336 2533 Circle
7171 2460 Circle
7072 2412 Circle
6841 2232 Circle
6697 2184 Circle
6631 2051 Circle
6422 2039 Circle
6323 1991 Circle
6202 2003 Circle
5926 2050 Circle
5783 2086 Circle
5716 2098 Circle
5562 2074 Circle
5430 2110 Circle
5297 2242 Circle
5121 2338 Circle
5000 2434 Circle
4922 2542 Circle
4834 2602 Circle
4646 2769 Circle
4613 2878 Circle
4414 3154 Circle
4304 3322 Circle
4205 3454 Circle
4050 3814 Circle
3895 4018 Circle
3840 4078 Circle
3763 4246 Circle
3553 4534 Circle
3431 4882 Circle
3332 5146 Circle
3255 5314 Circle
3177 5470 Circle
3034 5698 Circle
2934 5890 Circle
2879 6106 Circle
2768 6334 Circle
2702 6454 Circle
2636 6575 Circle
2559 6586 Circle
7983 7552 Circle
% End plot #1
% Begin plot #2
1.667 UP
5.000 UL
LT0
1.00 0.00 0.00 C 0.00 0.00 0.00 C 7376 6272 M
[ [(Courier) 320.0 0.0 true true 0 (   C)]
[(Courier) 256.0 -96.0 true true 0 (T)]
[(Courier) 320.0 0.0 true true 0 ( simulated)]
] -74.7 MRshow
LT0
1.00 0.00 0.00 C 7568 6272 M
831 0 V
6101 1777 M
724 85 V
704 419 V
654 709 V
582 886 V
495 932 V
400 853 V
305 684 V
212 461 V
126 223 V
47 -32 V
-22 -234 V
-85 -367 V
-139 -443 V
9918 5476 L
9692 4993 L
9431 4516 L
9141 4053 L
8825 3609 L
8489 3180 L
8136 2775 L
7769 2416 L
7392 2122 L
7007 1910 L
6618 1790 L
-391 -22 V
-390 97 V
-387 203 V
-380 310 V
-371 407 V
-359 485 V
-343 545 V
-323 577 V
-300 584 V
-272 558 V
-240 502 V
-201 410 V
-156 282 V
-106 108 V
-46 -64 V
21 -226 V
97 -375 V
180 -502 V
270 -607 V
366 -682 V
461 -719 V
552 -703 V
630 -623 V
689 -428 V
720 -139 V
6101 1777 Crs
6825 1862 Crs
7529 2281 Crs
8183 2990 Crs
8765 3876 Crs
9260 4808 Crs
9660 5661 Crs
9965 6345 Crs
10177 6806 Crs
10303 7029 Crs
10350 6997 Crs
10328 6763 Crs
10243 6396 Crs
10104 5953 Crs
9918 5476 Crs
9692 4993 Crs
9431 4516 Crs
9141 4053 Crs
8825 3609 Crs
8489 3180 Crs
8136 2775 Crs
7769 2416 Crs
7392 2122 Crs
7007 1910 Crs
6618 1790 Crs
6227 1768 Crs
5837 1865 Crs
5450 2068 Crs
5070 2378 Crs
4699 2785 Crs
4340 3270 Crs
3997 3815 Crs
3674 4392 Crs
3374 4976 Crs
3102 5534 Crs
2862 6036 Crs
2661 6446 Crs
2505 6728 Crs
2399 6836 Crs
2353 6772 Crs
2374 6546 Crs
2471 6171 Crs
2651 5669 Crs
2921 5062 Crs
3287 4380 Crs
3748 3661 Crs
4300 2958 Crs
4930 2335 Crs
5619 1907 Crs
6339 1768 Crs
7983 6272 Crs
% End plot #2
1.000 UP
2.000 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Courier Helvetica
