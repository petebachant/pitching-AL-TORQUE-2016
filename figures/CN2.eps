%!PS-Adobe-2.0 EPSF-2.0
%%Title: CN2.tex
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Sun Mar  6 20:47:53 2016
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (CN2.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (victor)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Mar  6 20:47:53 2016)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
1.000 UL
LTa
1078 704 M
5725 0 V
stroke
LTb
1078 704 M
63 0 V
5662 0 R
-63 0 V
stroke
LTa
1078 1213 M
5725 0 V
stroke
LTb
1078 1213 M
63 0 V
5662 0 R
-63 0 V
stroke
LTa
1078 1722 M
5725 0 V
stroke
LTb
1078 1722 M
63 0 V
5662 0 R
-63 0 V
stroke
LTa
1078 2231 M
5725 0 V
stroke
LTb
1078 2231 M
63 0 V
5662 0 R
-63 0 V
stroke
LTa
1078 2740 M
5725 0 V
stroke
LTb
1078 2740 M
63 0 V
5662 0 R
-63 0 V
stroke
LTa
1078 3248 M
5725 0 V
stroke
LTb
1078 3248 M
63 0 V
5662 0 R
-63 0 V
stroke
LTa
1078 3757 M
5725 0 V
stroke
LTb
1078 3757 M
63 0 V
5662 0 R
-63 0 V
stroke
LTa
1078 4266 M
5725 0 V
stroke
LTb
1078 4266 M
63 0 V
5662 0 R
-63 0 V
stroke
LTa
1078 4775 M
5725 0 V
stroke
LTb
1078 4775 M
63 0 V
5662 0 R
-63 0 V
stroke
LTa
1078 704 M
0 4071 V
stroke
LTb
1078 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
1651 704 M
0 4071 V
stroke
LTb
1651 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
2223 704 M
0 4071 V
stroke
LTb
2223 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
2796 704 M
0 3568 V
0 440 R
0 63 V
stroke
LTb
2796 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
3368 704 M
0 3568 V
0 440 R
0 63 V
stroke
LTb
3368 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
3941 704 M
0 3568 V
0 440 R
0 63 V
stroke
LTb
3941 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
4513 704 M
0 3568 V
0 440 R
0 63 V
stroke
LTb
4513 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
5086 704 M
0 3568 V
0 440 R
0 63 V
stroke
LTb
5086 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
5658 704 M
0 4071 V
stroke
LTb
5658 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
6231 704 M
0 4071 V
stroke
LTb
6231 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
6803 704 M
0 4071 V
stroke
LTb
6803 704 M
0 63 V
0 4008 R
0 -63 V
stroke
1078 4775 N
0 -4071 V
5725 0 V
0 4071 V
-5725 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UL
LTb
2589 4272 N
0 440 V
2702 0 V
0 -440 V
-2702 0 V
Z stroke
1.000 UP
1.000 UL
LT0
0.00 0.00 1.00 C LTb
LT0
0.00 0.00 1.00 C 4569 4602 M
591 0 V
3758 2694 M
528 333 V
507 344 V
459 332 V
393 284 V
318 216 V
242 143 V
169 73 V
104 -5 V
48 -80 V
-2 -124 V
-44 -134 V
-78 -125 V
6293 3842 L
-134 -92 V
-154 -76 V
-173 -63 V
-187 -54 V
-199 -46 V
-209 -62 V
-217 -83 V
4796 3262 L
4567 3136 L
4335 2994 L
4101 2840 L
3866 2677 L
3631 2508 L
3398 2334 L
3168 2160 L
2942 1991 L
2722 1831 L
2510 1681 L
2306 1546 L
2115 1427 L
-178 -99 V
-162 -72 V
-141 -39 V
-118 -1 V
-91 45 V
-57 75 V
-17 87 V
28 95 V
83 99 V
145 102 V
214 108 V
290 117 V
367 133 V
437 171 V
492 245 V
524 307 V
3758 2694 Pls
4286 3027 Pls
4793 3371 Pls
5252 3703 Pls
5645 3987 Pls
5963 4203 Pls
6205 4346 Pls
6374 4419 Pls
6478 4414 Pls
6526 4334 Pls
6524 4210 Pls
6480 4076 Pls
6402 3951 Pls
6293 3842 Pls
6159 3750 Pls
6005 3674 Pls
5832 3611 Pls
5645 3557 Pls
5446 3511 Pls
5237 3449 Pls
5020 3366 Pls
4796 3262 Pls
4567 3136 Pls
4335 2994 Pls
4101 2840 Pls
3866 2677 Pls
3631 2508 Pls
3398 2334 Pls
3168 2160 Pls
2942 1991 Pls
2722 1831 Pls
2510 1681 Pls
2306 1546 Pls
2115 1427 Pls
1937 1328 Pls
1775 1256 Pls
1634 1217 Pls
1516 1216 Pls
1425 1261 Pls
1368 1336 Pls
1351 1423 Pls
1379 1518 Pls
1462 1617 Pls
1607 1719 Pls
1821 1827 Pls
2111 1944 Pls
2478 2077 Pls
2915 2248 Pls
3407 2493 Pls
3931 2800 Pls
4864 4602 Pls
1.000 UP
1.000 UL
LT1
1.00 0.65 0.00 C LTb
LT1
1.00 0.65 0.00 C 4569 4382 M
591 0 V
1450 1854 M
158 98 V
148 56 V
46 8 V
92 8 V
130 16 V
120 16 V
102 8 V
65 16 V
92 17 V
111 -1 V
102 25 V
83 8 V
93 32 V
111 49 V
129 40 V
102 40 V
111 49 V
102 48 V
74 25 V
101 48 V
102 57 V
111 40 V
93 65 V
83 49 V
139 81 V
46 56 V
47 57 V
120 65 V
55 40 V
75 97 V
120 81 V
83 57 V
74 57 V
102 81 V
102 105 V
93 73 V
101 73 V
121 113 V
65 89 V
138 122 V
84 89 V
129 81 V
158 97 V
139 97 V
92 57 V
120 32 V
102 32 V
37 25 V
74 -73 V
37 -57 V
37 -65 V
9 -41 V
18 -48 V
19 -65 V
-19 -65 V
0 -57 V
-46 -97 V
-28 -41 V
-46 -40 V
-74 -73 V
-74 -57 V
-38 -40 V
-74 -49 V
-83 -48 V
-46 -25 V
-93 -40 V
-46 -24 V
-83 -33 V
-37 -8 V
-19 -16 V
-46 -16 V
-83 -41 V
-93 -32 V
-120 -65 V
-130 -48 V
-92 -41 V
-93 -48 V
-111 -24 V
-18 -25 V
-65 -16 V
-37 -40 V
-55 -25 V
-84 -40 V
-92 -40 V
-111 -41 V
-102 -48 V
-56 -33 V
-92 -24 V
-102 -73 V
-83 -24 V
-130 -65 V
-120 -65 V
-74 -40 V
-111 -57 V
-148 -81 V
3254 2209 L
-111 -89 V
-74 -81 V
2911 1934 L
-120 -89 V
-129 -73 V
-102 -97 V
-158 -57 V
-111 -65 V
-120 -56 V
-102 -49 V
-101 -32 V
-93 -32 V
-139 -73 V
-55 -24 V
-65 -17 V
-74 -24 V
-55 57 V
-56 73 V
-9 89 V
-18 89 V
-19 33 V
65 130 V
-9 56 V
19 41 V
1450 1854 Crs
1608 1952 Crs
1756 2008 Crs
1802 2016 Crs
1894 2024 Crs
2024 2040 Crs
2144 2056 Crs
2246 2064 Crs
2311 2080 Crs
2403 2097 Crs
2514 2096 Crs
2616 2121 Crs
2699 2129 Crs
2792 2161 Crs
2903 2210 Crs
3032 2250 Crs
3134 2290 Crs
3245 2339 Crs
3347 2387 Crs
3421 2412 Crs
3522 2460 Crs
3624 2517 Crs
3735 2557 Crs
3828 2622 Crs
3911 2671 Crs
4050 2752 Crs
4096 2808 Crs
4143 2865 Crs
4263 2930 Crs
4318 2970 Crs
4393 3067 Crs
4513 3148 Crs
4596 3205 Crs
4670 3262 Crs
4772 3343 Crs
4874 3448 Crs
4967 3521 Crs
5068 3594 Crs
5189 3707 Crs
5254 3796 Crs
5392 3918 Crs
5476 4007 Crs
5605 4088 Crs
5763 4185 Crs
5902 4282 Crs
5994 4339 Crs
6114 4371 Crs
6216 4403 Crs
6253 4428 Crs
6327 4355 Crs
6364 4298 Crs
6401 4233 Crs
6410 4192 Crs
6428 4144 Crs
6447 4079 Crs
6428 4014 Crs
6428 3957 Crs
6382 3860 Crs
6354 3819 Crs
6308 3779 Crs
6234 3706 Crs
6160 3649 Crs
6122 3609 Crs
6048 3560 Crs
5965 3512 Crs
5919 3487 Crs
5826 3447 Crs
5780 3423 Crs
5697 3390 Crs
5660 3382 Crs
5641 3366 Crs
5595 3350 Crs
5512 3309 Crs
5419 3277 Crs
5299 3212 Crs
5169 3164 Crs
5077 3123 Crs
4984 3075 Crs
4873 3051 Crs
4855 3026 Crs
4790 3010 Crs
4753 2970 Crs
4698 2945 Crs
4614 2905 Crs
4522 2865 Crs
4411 2824 Crs
4309 2776 Crs
4253 2743 Crs
4161 2719 Crs
4059 2646 Crs
3976 2622 Crs
3846 2557 Crs
3726 2492 Crs
3652 2452 Crs
3541 2395 Crs
3393 2314 Crs
3254 2209 Crs
3143 2120 Crs
3069 2039 Crs
2911 1934 Crs
2791 1845 Crs
2662 1772 Crs
2560 1675 Crs
2402 1618 Crs
2291 1553 Crs
2171 1497 Crs
2069 1448 Crs
1968 1416 Crs
1875 1384 Crs
1736 1311 Crs
1681 1287 Crs
1616 1270 Crs
1542 1246 Crs
1487 1303 Crs
1431 1376 Crs
1422 1465 Crs
1404 1554 Crs
1385 1587 Crs
1450 1717 Crs
1441 1773 Crs
1460 1814 Crs
4864 4382 Crs
1.000 UL
LTb
1078 4775 N
0 -4071 V
5725 0 V
0 4071 V
-5725 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
