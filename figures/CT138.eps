%!PS-Adobe-2.0 EPSF-2.0
%%Title: CT138.eps
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Thu May 26 13:18:00 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 626 482
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 2 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -86 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 626 50 lineto 626 482 lineto 50 482 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (CT138.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (victor)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu May 26 13:18:00 2016)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 11520.00 8640.00 BoxColFill} if
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1.00 1.00 1.00 C 1.000 1851 950 8572 7040 BoxColFill
1.000 UL
LTb
1.000 UL
LTa
1851 950 M
8573 0 V
stroke
LTb
1851 950 M
88 0 V
stroke
0.00 0.00 0.00 C 1695 950 M
[ [(Courier) 200.0 0.0 true true 0 (-0.05)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1851 2124 M
8573 0 V
stroke
LTb
1851 2124 M
88 0 V
stroke
0.00 0.00 0.00 C 1695 2124 M
[ [(Courier) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1851 3297 M
8573 0 V
stroke
LTb
1851 3297 M
88 0 V
stroke
0.00 0.00 0.00 C 1695 3297 M
[ [(Courier) 200.0 0.0 true true 0 (0.05)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1851 4471 M
8573 0 V
stroke
LTb
1851 4471 M
88 0 V
stroke
0.00 0.00 0.00 C 1695 4471 M
[ [(Courier) 200.0 0.0 true true 0 (0.1)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1851 5644 M
8573 0 V
stroke
LTb
1851 5644 M
88 0 V
stroke
0.00 0.00 0.00 C 1695 5644 M
[ [(Courier) 200.0 0.0 true true 0 (0.15)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1851 6818 M
8573 0 V
stroke
LTb
1851 6818 M
88 0 V
stroke
0.00 0.00 0.00 C 1695 6818 M
[ [(Courier) 200.0 0.0 true true 0 (0.2)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1851 7991 M
8573 0 V
stroke
LTb
1851 7991 M
88 0 V
stroke
0.00 0.00 0.00 C 1695 7991 M
[ [(Courier) 200.0 0.0 true true 0 (0.25)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1851 950 M
0 7041 V
stroke
LTb
1851 950 M
0 88 V
stroke
0.00 0.00 0.00 C 1851 690 M
[ [(Courier) 200.0 0.0 true true 0 (-15)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3280 950 M
0 7041 V
stroke
LTb
3280 950 M
0 88 V
stroke
0.00 0.00 0.00 C 3280 690 M
[ [(Courier) 200.0 0.0 true true 0 (-10)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4709 950 M
0 6348 V
0 630 R
0 63 V
stroke
LTb
4709 950 M
0 88 V
stroke
0.00 0.00 0.00 C 4709 690 M
[ [(Courier) 200.0 0.0 true true 0 (-5)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6138 950 M
0 6348 V
0 630 R
0 63 V
stroke
LTb
6138 950 M
0 88 V
stroke
0.00 0.00 0.00 C 6138 690 M
[ [(Courier) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
7566 950 M
0 6348 V
0 630 R
0 63 V
stroke
LTb
7566 950 M
0 88 V
stroke
0.00 0.00 0.00 C 7566 690 M
[ [(Courier) 200.0 0.0 true true 0 (5)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
8995 950 M
0 7041 V
stroke
LTb
8995 950 M
0 88 V
stroke
0.00 0.00 0.00 C 8995 690 M
[ [(Courier) 200.0 0.0 true true 0 (10)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
10424 950 M
0 7041 V
stroke
LTb
10424 950 M
0 88 V
stroke
0.00 0.00 0.00 C 10424 690 M
[ [(Courier) 200.0 0.0 true true 0 (15)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1851 7991 M
0 -7041 V
8573 0 V
0 7041 R
-8573 0 R
stroke
0.00 0.00 0.00 C 629 4470 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Courier) 320.0 0.0 true true 0 (C)]
[(Courier) 256.0 -96.0 true true 0 (T)]
] -74.7 MCshow
grestore
LTb
0.00 0.00 0.00 C 6137 300 M
[ [(Courier) 320.0 0.0 true true 0 (Angle of attack )]
[(Symbol) 320.0 0.0 true true 0 (a)]
[(Courier) 320.0 0.0 true true 0 ( [)]
[(Symbol) 320.0 0.0 true true 0 (\260)]
[(Courier) 320.0 0.0 true true 0 (])]
] -106.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LTb
4468 7298 N
0 630 V
3338 0 V
0 -630 V
-3338 0 V
Z stroke
% Begin plot #1
1.667 UP
2.000 UL
LT0
0.00 0.00 1.00 C 0.00 0.00 0.00 C 6808 7771 M
[ [(Courier) 320.0 0.0 true true 0 (   experimental)]
] -106.7 MRshow
LT0
0.00 0.00 1.00 C 6964 7771 M
687 0 V
2198 6720 M
37 -80 V
73 -129 V
73 -96 V
60 -129 V
85 -161 V
61 -80 V
97 -113 V
73 -177 V
73 -113 V
85 -145 V
85 -112 V
86 -161 V
36 -65 V
61 -64 V
61 -81 V
60 -96 V
73 -113 V
122 -177 V
85 -145 V
122 -177 V
85 -96 V
121 -113 V
110 -113 V
85 -80 V
109 -129 V
98 -65 V
109 -128 V
110 -129 V
121 -113 V
86 -64 V
121 -129 V
110 -113 V
97 -97 V
97 -64 V
122 -81 V
110 -96 V
85 -65 V
85 -64 V
146 -33 V
122 -80 V
194 -113 V
244 -49 V
183 -32 V
280 15 V
304 64 V
195 80 V
146 128 V
147 128 V
146 129 V
183 144 V
85 193 V
146 176 V
135 145 V
109 128 V
98 177 V
110 160 V
122 145 V
85 177 V
134 176 V
61 177 V
86 144 V
85 97 V
98 160 V
73 209 V
98 177 V
122 305 V
85 144 V
134 209 V
98 209 V
61 145 V
37 192 V
49 225 V
49 209 V
36 129 V
-49 -209 V
-97 -241 V
-74 -209 V
-73 -128 V
9577 6176 L
-97 -128 V
-37 -177 V
-98 -145 V
-73 -96 V
-97 -193 V
9053 5261 L
8943 5068 L
-98 -144 V
-12 0 V
-73 -97 V
-98 -209 V
-85 -160 V
-86 -177 V
8345 4105 L
8235 3992 L
-85 -112 V
-73 -80 V
7967 3655 L
7833 3495 L
7699 3366 L
-110 -96 V
7382 3046 L
-110 -81 V
-122 -96 V
6992 2741 L
-146 -80 V
-110 -64 V
-122 -64 V
-219 -97 V
-146 -47 V
-207 -48 V
-159 -32 V
-182 0 V
-159 17 V
-121 16 V
-147 64 V
-121 33 V
-122 80 V
-109 65 V
-171 113 V
-231 193 V
-146 145 V
-134 177 V
-61 113 V
-158 145 V
-121 113 V
-61 144 V
-73 65 V
-73 128 V
-85 161 V
-61 97 V
-109 161 V
-73 145 V
-73 80 V
-73 113 V
-73 161 V
-122 145 V
-85 193 V
0 64 V
-60 81 V
-73 144 V
-49 97 V
-85 161 V
-73 129 V
-48 144 V
-61 129 V
2198 6720 Circle
2235 6640 Circle
2308 6511 Circle
2381 6415 Circle
2441 6286 Circle
2526 6125 Circle
2587 6045 Circle
2684 5932 Circle
2757 5755 Circle
2830 5642 Circle
2915 5497 Circle
3000 5385 Circle
3086 5224 Circle
3122 5159 Circle
3183 5095 Circle
3244 5014 Circle
3304 4918 Circle
3377 4805 Circle
3499 4628 Circle
3584 4483 Circle
3706 4306 Circle
3791 4210 Circle
3912 4097 Circle
4022 3984 Circle
4107 3904 Circle
4216 3775 Circle
4314 3710 Circle
4423 3582 Circle
4533 3453 Circle
4654 3340 Circle
4740 3276 Circle
4861 3147 Circle
4971 3034 Circle
5068 2937 Circle
5165 2873 Circle
5287 2792 Circle
5397 2696 Circle
5482 2631 Circle
5567 2567 Circle
5713 2534 Circle
5835 2454 Circle
6029 2341 Circle
6273 2292 Circle
6456 2260 Circle
6736 2275 Circle
7040 2339 Circle
7235 2419 Circle
7381 2547 Circle
7528 2675 Circle
7674 2804 Circle
7857 2948 Circle
7942 3141 Circle
8088 3317 Circle
8223 3462 Circle
8332 3590 Circle
8430 3767 Circle
8540 3927 Circle
8662 4072 Circle
8747 4249 Circle
8881 4425 Circle
8942 4602 Circle
9028 4746 Circle
9113 4843 Circle
9211 5003 Circle
9284 5212 Circle
9382 5389 Circle
9504 5694 Circle
9589 5838 Circle
9723 6047 Circle
9821 6256 Circle
9882 6401 Circle
9919 6593 Circle
9968 6818 Circle
10017 7027 Circle
10053 7156 Circle
10004 6947 Circle
9907 6706 Circle
9833 6497 Circle
9760 6369 Circle
9577 6176 Circle
9480 6048 Circle
9443 5871 Circle
9345 5726 Circle
9272 5630 Circle
9175 5437 Circle
9053 5261 Circle
8943 5068 Circle
8845 4924 Circle
8833 4924 Circle
8760 4827 Circle
8662 4618 Circle
8577 4458 Circle
8491 4281 Circle
8345 4105 Circle
8235 3992 Circle
8150 3880 Circle
8077 3800 Circle
7967 3655 Circle
7833 3495 Circle
7699 3366 Circle
7589 3270 Circle
7382 3046 Circle
7272 2965 Circle
7150 2869 Circle
6992 2741 Circle
6846 2661 Circle
6736 2597 Circle
6614 2533 Circle
6395 2436 Circle
6249 2389 Circle
6042 2341 Circle
5883 2309 Circle
5701 2309 Circle
5542 2326 Circle
5421 2342 Circle
5274 2406 Circle
5153 2439 Circle
5031 2519 Circle
4922 2584 Circle
4751 2697 Circle
4520 2890 Circle
4374 3035 Circle
4240 3212 Circle
4179 3325 Circle
4021 3470 Circle
3900 3583 Circle
3839 3727 Circle
3766 3792 Circle
3693 3920 Circle
3608 4081 Circle
3547 4178 Circle
3438 4339 Circle
3365 4484 Circle
3292 4564 Circle
3219 4677 Circle
3146 4838 Circle
3024 4983 Circle
2939 5176 Circle
2939 5240 Circle
2879 5321 Circle
2806 5465 Circle
2757 5562 Circle
2672 5723 Circle
2599 5852 Circle
2551 5996 Circle
2490 6125 Circle
7307 7771 Circle
% End plot #1
% Begin plot #2
2.000 UL
LT0
1.00 0.00 0.00 C 0.00 0.00 0.00 C 6808 7456 M
[ [(Courier) 320.0 0.0 true true 0 (   simulated)]
] -106.7 MRshow
LT0
1.00 0.00 0.00 C 6964 7456 M
687 0 V
5909 1926 M
661 51 V
646 296 V
609 514 V
554 662 V
484 726 V
405 703 V
323 611 V
239 470 V
158 302 V
81 129 V
10 -33 V
-54 -172 V
9912 5902 L
9747 5537 L
9536 5115 L
9286 4661 L
9000 4194 L
8686 3731 L
8346 3290 L
7986 2887 L
7608 2537 L
7219 2254 L
6820 2051 L
6415 1938 L
-407 -22 V
-406 87 V
-402 184 V
-393 279 V
-382 365 V
-367 431 V
-348 482 V
-324 506 V
-297 507 V
-264 480 V
-225 425 V
-182 343 V
-133 237 V
-76 109 V
-15 -31 V
55 -178 V
130 -323 V
209 -455 V
292 -564 V
376 -636 V
456 -660 V
529 -622 V
591 -513 V
635 -339 V
659 -115 V
% End plot #2
1.000 UP
stroke
1.000 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Courier Helvetica
