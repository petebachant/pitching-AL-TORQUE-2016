%!PS-Adobe-2.0 EPSF-2.0
%%Title: CT138.tex
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Sat Jun 11 12:30:57 2016
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (CT138.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (victor)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Jun 11 12:30:57 2016)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
1.000 UL
LTa
1210 704 M
5593 0 V
stroke
LTb
1210 704 M
63 0 V
5530 0 R
-63 0 V
stroke
LTa
1210 1383 M
5593 0 V
stroke
LTb
1210 1383 M
63 0 V
5530 0 R
-63 0 V
stroke
LTa
1210 2061 M
5593 0 V
stroke
LTb
1210 2061 M
63 0 V
5530 0 R
-63 0 V
stroke
LTa
1210 2740 M
5593 0 V
stroke
LTb
1210 2740 M
63 0 V
5530 0 R
-63 0 V
stroke
LTa
1210 3418 M
5593 0 V
stroke
LTb
1210 3418 M
63 0 V
5530 0 R
-63 0 V
stroke
LTa
1210 4097 M
5593 0 V
stroke
LTb
1210 4097 M
63 0 V
5530 0 R
-63 0 V
stroke
LTa
1210 4775 M
5593 0 V
stroke
LTb
1210 4775 M
63 0 V
5530 0 R
-63 0 V
stroke
LTa
1210 704 M
0 4071 V
stroke
LTb
1210 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
2142 704 M
0 4071 V
stroke
LTb
2142 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
3074 704 M
0 3568 V
0 440 R
0 63 V
stroke
LTb
3074 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
4007 704 M
0 3568 V
0 440 R
0 63 V
stroke
LTb
4007 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
4939 704 M
0 3568 V
0 440 R
0 63 V
stroke
LTb
4939 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
5871 704 M
0 4071 V
stroke
LTb
5871 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
6803 704 M
0 4071 V
stroke
LTb
6803 704 M
0 63 V
0 4008 R
0 -63 V
stroke
1210 4775 N
0 -4071 V
5593 0 V
0 4071 V
-5593 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UL
LTb
2787 4272 N
0 440 V
2438 0 V
0 -440 V
-2438 0 V
Z stroke
1.000 UP
1.000 UL
LT0
0.00 0.00 1.00 C 1436 4040 M
24 -46 V
48 -75 V
47 -55 V
40 -75 V
56 -93 V
39 -46 V
64 -66 V
47 -102 V
48 -65 V
55 -84 V
56 -65 V
55 -93 V
24 -37 V
40 -37 V
40 -47 V
39 -56 V
48 -65 V
79 -102 V
56 -84 V
79 -102 V
55 -56 V
80 -66 V
71 -65 V
56 -46 V
71 -75 V
64 -37 V
71 -74 V
72 -75 V
79 -65 V
56 -37 V
79 -75 V
71 -65 V
64 -56 V
63 -37 V
80 -47 V
71 -56 V
56 -37 V
55 -37 V
96 -19 V
79 -47 V
127 -65 V
159 -28 V
119 -19 V
183 9 V
198 37 V
128 46 V
95 74 V
95 75 V
96 74 V
119 83 V
56 112 V
95 102 V
88 83 V
71 75 V
64 102 V
72 93 V
79 83 V
56 102 V
87 102 V
40 102 V
56 84 V
56 56 V
63 93 V
48 120 V
64 102 V
80 177 V
55 83 V
88 121 V
63 121 V
40 83 V
24 112 V
32 130 V
32 121 V
24 74 V
-32 -121 V
-64 -139 V
-47 -121 V
-48 -74 V
6251 3726 L
-64 -75 V
-24 -102 V
-64 -83 V
-47 -56 V
-64 -111 V
-80 -103 V
-71 -111 V
-64 -84 V
-8 0 V
-48 -55 V
-63 -121 V
-56 -93 V
-56 -102 V
-95 -102 V
-72 -65 V
-56 -65 V
-47 -46 V
-72 -84 V
-87 -93 V
-88 -74 V
-71 -56 V
4818 1916 L
-71 -47 V
-80 -55 V
-103 -75 V
-96 -46 V
-71 -37 V
-80 -37 V
-143 -56 V
-95 -27 V
-135 -28 V
-103 -18 V
-120 0 V
-103 9 V
-79 10 V
-96 37 V
-79 19 V
-79 46 V
-72 38 V
-111 65 V
-151 112 V
-95 84 V
-87 102 V
-40 65 V
-103 84 V
-79 65 V
-40 84 V
-48 37 V
-47 74 V
-56 94 V
-39 55 V
-72 93 V
-47 84 V
-48 47 V
-48 65 V
-47 93 V
-79 84 V
-56 111 V
0 37 V
-40 47 V
-47 84 V
-32 56 V
-55 93 V
-48 74 V
-32 84 V
-39 74 V
1436 4040 Pls
1460 3994 Pls
1508 3919 Pls
1555 3864 Pls
1595 3789 Pls
1651 3696 Pls
1690 3650 Pls
1754 3584 Pls
1801 3482 Pls
1849 3417 Pls
1904 3333 Pls
1960 3268 Pls
2015 3175 Pls
2039 3138 Pls
2079 3101 Pls
2119 3054 Pls
2158 2998 Pls
2206 2933 Pls
2285 2831 Pls
2341 2747 Pls
2420 2645 Pls
2475 2589 Pls
2555 2523 Pls
2626 2458 Pls
2682 2412 Pls
2753 2337 Pls
2817 2300 Pls
2888 2226 Pls
2960 2151 Pls
3039 2086 Pls
3095 2049 Pls
3174 1974 Pls
3245 1909 Pls
3309 1853 Pls
3372 1816 Pls
3452 1769 Pls
3523 1713 Pls
3579 1676 Pls
3634 1639 Pls
3730 1620 Pls
3809 1573 Pls
3936 1508 Pls
4095 1480 Pls
4214 1461 Pls
4397 1470 Pls
4595 1507 Pls
4723 1553 Pls
4818 1627 Pls
4913 1702 Pls
5009 1776 Pls
5128 1859 Pls
5184 1971 Pls
5279 2073 Pls
5367 2156 Pls
5438 2231 Pls
5502 2333 Pls
5574 2426 Pls
5653 2509 Pls
5709 2611 Pls
5796 2713 Pls
5836 2815 Pls
5892 2899 Pls
5948 2955 Pls
6011 3048 Pls
6059 3168 Pls
6123 3270 Pls
6203 3447 Pls
6258 3530 Pls
6346 3651 Pls
6409 3772 Pls
6449 3855 Pls
6473 3967 Pls
6505 4097 Pls
6537 4218 Pls
6561 4292 Pls
6529 4171 Pls
6465 4032 Pls
6418 3911 Pls
6370 3837 Pls
6251 3726 Pls
6187 3651 Pls
6163 3549 Pls
6099 3466 Pls
6052 3410 Pls
5988 3299 Pls
5908 3196 Pls
5837 3085 Pls
5773 3001 Pls
5765 3001 Pls
5717 2946 Pls
5654 2825 Pls
5598 2732 Pls
5542 2630 Pls
5447 2528 Pls
5375 2463 Pls
5319 2398 Pls
5272 2352 Pls
5200 2268 Pls
5113 2175 Pls
5025 2101 Pls
4954 2045 Pls
4818 1916 Pls
4747 1869 Pls
4667 1814 Pls
4564 1739 Pls
4468 1693 Pls
4397 1656 Pls
4317 1619 Pls
4174 1563 Pls
4079 1536 Pls
3944 1508 Pls
3841 1490 Pls
3721 1490 Pls
3618 1499 Pls
3539 1509 Pls
3443 1546 Pls
3364 1565 Pls
3285 1611 Pls
3213 1649 Pls
3102 1714 Pls
2951 1826 Pls
2856 1910 Pls
2769 2012 Pls
2729 2077 Pls
2626 2161 Pls
2547 2226 Pls
2507 2310 Pls
2459 2347 Pls
2412 2421 Pls
2356 2515 Pls
2317 2570 Pls
2245 2663 Pls
2198 2747 Pls
2150 2794 Pls
2102 2859 Pls
2055 2952 Pls
1976 3036 Pls
1920 3147 Pls
1920 3184 Pls
1880 3231 Pls
1833 3315 Pls
1801 3371 Pls
1746 3464 Pls
1698 3538 Pls
1666 3622 Pls
1627 3696 Pls
1.000 UL
LT0
1.00 0.00 0.00 C 3857 1268 M
432 30 V
421 171 V
398 297 V
361 383 V
316 419 V
264 407 V
210 354 V
156 271 V
103 175 V
53 74 V
7 -19 V
-36 -99 V
-73 -164 V
6361 3356 L
6224 3112 L
6060 2850 L
5874 2579 L
5669 2312 L
5447 2057 L
5212 1824 L
4966 1622 L
4712 1458 L
4451 1341 L
-264 -66 V
-265 -13 V
-265 51 V
-262 106 V
-257 161 V
-249 211 V
-239 250 V
-227 279 V
-212 292 V
-193 293 V
-172 278 V
-148 245 V
-118 199 V
-87 137 V
-50 63 V
-9 -18 V
36 -103 V
84 -187 V
137 -263 V
190 -326 V
245 -368 V
298 -381 V
346 -360 V
385 -297 V
414 -196 V
430 -66 V
stroke
LTw
1.000 2787 4272 2438 440 BoxColFill
1.000 UL
LTb
2787 4272 N
0 440 V
2438 0 V
0 -440 V
-2438 0 V
Z stroke
1.000 UP
1.000 UL
LT0
0.00 0.00 1.00 C LTb
LT0
0.00 0.00 1.00 C 4503 4602 M
591 0 V
4798 4602 Pls
1.000 UL
LT0
1.00 0.00 0.00 C LTb
LT0
1.00 0.00 0.00 C 4503 4382 M
591 0 V
stroke
LTb
1210 4775 N
0 -4071 V
5593 0 V
0 4071 V
-5593 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
