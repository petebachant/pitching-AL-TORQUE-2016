%!PS-Adobe-2.0 EPSF-2.0
%%Title: CT2.tex
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Sat Mar  5 00:39:31 2016
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (CT2.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (victor)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Mar  5 00:39:31 2016)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
1.000 UL
LTa
1078 1103 M
5725 0 V
stroke
LTb
1078 1103 M
63 0 V
5662 0 R
-63 0 V
stroke
LTa
1078 1901 M
5725 0 V
stroke
LTb
1078 1901 M
63 0 V
5662 0 R
-63 0 V
stroke
LTa
1078 2700 M
5725 0 V
stroke
LTb
1078 2700 M
63 0 V
5662 0 R
-63 0 V
stroke
LTa
1078 3498 M
5725 0 V
stroke
LTb
1078 3498 M
63 0 V
5662 0 R
-63 0 V
stroke
LTa
1078 4296 M
1511 0 V
2702 0 R
1512 0 V
stroke
LTb
1078 4296 M
63 0 V
5662 0 R
-63 0 V
stroke
LTa
1078 704 M
0 4071 V
stroke
LTb
1078 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
1651 704 M
0 4071 V
stroke
LTb
1651 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
2223 704 M
0 4071 V
stroke
LTb
2223 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
2796 704 M
0 3568 V
0 440 R
0 63 V
stroke
LTb
2796 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
3368 704 M
0 3568 V
0 440 R
0 63 V
stroke
LTb
3368 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
3941 704 M
0 3568 V
0 440 R
0 63 V
stroke
LTb
3941 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
4513 704 M
0 3568 V
0 440 R
0 63 V
stroke
LTb
4513 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
5086 704 M
0 3568 V
0 440 R
0 63 V
stroke
LTb
5086 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
5658 704 M
0 4071 V
stroke
LTb
5658 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
6231 704 M
0 4071 V
stroke
LTb
6231 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
6803 704 M
0 4071 V
stroke
LTb
6803 704 M
0 63 V
0 4008 R
0 -63 V
stroke
1078 4775 N
0 -4071 V
5725 0 V
0 4071 V
-5725 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UL
LTb
2589 4272 N
0 440 V
2702 0 V
0 -440 V
-2702 0 V
Z stroke
1.000 UP
1.000 UL
LT0
0.00 0.00 1.00 C LTb
LT0
0.00 0.00 1.00 C 4569 4602 M
591 0 V
3694 1034 M
453 103 V
428 386 V
394 622 V
350 735 V
299 712 V
246 586 V
190 383 V
137 119 V
91 -173 V
53 -368 V
10 -448 V
-39 -438 V
-84 -375 V
6099 2582 L
5947 2357 L
5773 2184 L
5584 2041 L
5383 1910 L
5173 1749 L
4965 1571 L
4760 1393 L
4556 1234 L
4352 1113 L
-204 -69 V
-205 -11 V
-206 64 V
-207 130 V
-205 201 V
-205 265 V
-201 317 V
-197 360 V
-190 383 V
-183 391 V
-171 374 V
-160 324 V
-146 233 V
-129 109 V
-109 -64 V
-88 -197 V
-51 -287 V
0 -339 V
60 -350 V
127 -338 V
200 -316 V
277 -301 V
351 -298 V
415 -309 V
458 -270 V
462 -78 V
3694 1034 Pls
4147 1137 Pls
4575 1523 Pls
4969 2145 Pls
5319 2880 Pls
5618 3592 Pls
5864 4178 Pls
6054 4561 Pls
6191 4680 Pls
6282 4507 Pls
6335 4139 Pls
6345 3691 Pls
6306 3253 Pls
6222 2878 Pls
6099 2582 Pls
5947 2357 Pls
5773 2184 Pls
5584 2041 Pls
5383 1910 Pls
5173 1749 Pls
4965 1571 Pls
4760 1393 Pls
4556 1234 Pls
4352 1113 Pls
4148 1044 Pls
3943 1033 Pls
3737 1097 Pls
3530 1227 Pls
3325 1428 Pls
3120 1693 Pls
2919 2010 Pls
2722 2370 Pls
2532 2753 Pls
2349 3144 Pls
2178 3518 Pls
2018 3842 Pls
1872 4075 Pls
1743 4184 Pls
1634 4120 Pls
1546 3923 Pls
1495 3636 Pls
1495 3297 Pls
1555 2947 Pls
1682 2609 Pls
1882 2293 Pls
2159 1992 Pls
2510 1694 Pls
2925 1385 Pls
3383 1115 Pls
3845 1037 Pls
4864 4602 Pls
1.000 UP
1.000 UL
LT1
1.00 0.65 0.00 C LTb
LT1
1.00 0.65 0.00 C 4569 4382 M
591 0 V
1529 4070 M
55 -42 V
47 -63 V
55 -96 V
75 -148 V
55 -127 V
56 -85 V
93 -201 V
37 -117 V
102 -201 V
93 -159 V
93 -170 V
65 -105 V
74 -117 V
55 -106 V
56 -138 V
74 -95 V
47 -85 V
93 -116 V
64 -106 V
93 -106 V
65 -117 V
84 -84 V
148 -85 V
129 -74 V
139 -74 V
223 -63 V
203 -10 V
250 0 V
241 32 V
176 75 V
148 106 V
194 106 V
232 96 V
157 96 V
194 117 V
111 85 V
185 127 V
157 128 V
84 106 V
83 53 V
55 64 V
65 95 V
65 64 V
102 42 V
64 64 V
-65 265 V
-9 212 V
0 85 V
-10 106 V
-18 148 V
-1 117 V
-18 117 V
-37 137 V
-10 75 V
-9 53 V
-28 42 V
-56 116 V
-64 22 V
-74 -54 V
-56 -127 V
-64 -159 V
-65 -85 V
-46 -117 V
-56 -116 V
-64 -117 V
-46 -191 V
-84 -117 V
-74 -170 V
-55 -116 V
-74 -212 V
-92 -138 V
-28 -96 V
5151 2136 L
-64 -117 V
4966 1828 L
-74 -106 V
-46 -106 V
4708 1488 L
-65 -116 V
-139 -85 V
-203 -96 V
-260 -22 V
-194 0 V
-111 42 V
-130 74 V
-130 74 V
-148 85 V
-120 95 V
-130 74 V
-65 42 V
-130 53 V
-148 53 V
-148 63 V
-121 74 V
-111 43 V
-176 42 V
-102 21 V
-120 31 V
-111 32 V
-102 32 V
-65 21 V
-102 0 V
-83 -11 V
-46 0 V
0 85 V
-47 148 V
0 127 V
-9 106 V
-1 223 V
0 138 V
9 148 V
0 159 V
0 138 V
27 223 V
10 127 V
-1 95 V
37 170 V
47 64 V
1529 4070 Crs
1584 4028 Crs
1631 3965 Crs
1686 3869 Crs
1761 3721 Crs
1816 3594 Crs
1872 3509 Crs
1965 3308 Crs
2002 3191 Crs
2104 2990 Crs
2197 2831 Crs
2290 2661 Crs
2355 2556 Crs
2429 2439 Crs
2484 2333 Crs
2540 2195 Crs
2614 2100 Crs
2661 2015 Crs
2754 1899 Crs
2818 1793 Crs
2911 1687 Crs
2976 1570 Crs
3060 1486 Crs
3208 1401 Crs
3337 1327 Crs
3476 1253 Crs
3699 1190 Crs
3902 1180 Crs
4152 1180 Crs
4393 1212 Crs
4569 1287 Crs
4717 1393 Crs
4911 1499 Crs
5143 1595 Crs
5300 1691 Crs
5494 1808 Crs
5605 1893 Crs
5790 2020 Crs
5947 2148 Crs
6031 2254 Crs
6114 2307 Crs
6169 2371 Crs
6234 2466 Crs
6299 2530 Crs
6401 2572 Crs
6465 2636 Crs
6400 2901 Crs
6391 3113 Crs
6391 3198 Crs
6381 3304 Crs
6363 3452 Crs
6362 3569 Crs
6344 3686 Crs
6307 3823 Crs
6297 3898 Crs
6288 3951 Crs
6260 3993 Crs
6204 4109 Crs
6140 4131 Crs
6066 4077 Crs
6010 3950 Crs
5946 3791 Crs
5881 3706 Crs
5835 3589 Crs
5779 3473 Crs
5715 3356 Crs
5669 3165 Crs
5585 3048 Crs
5511 2878 Crs
5456 2762 Crs
5382 2550 Crs
5290 2412 Crs
5262 2316 Crs
5151 2136 Crs
5087 2019 Crs
4966 1828 Crs
4892 1722 Crs
4846 1616 Crs
4708 1488 Crs
4643 1372 Crs
4504 1287 Crs
4301 1191 Crs
4041 1169 Crs
3847 1169 Crs
3736 1211 Crs
3606 1285 Crs
3476 1359 Crs
3328 1444 Crs
3208 1539 Crs
3078 1613 Crs
3013 1655 Crs
2883 1708 Crs
2735 1761 Crs
2587 1824 Crs
2466 1898 Crs
2355 1941 Crs
2179 1983 Crs
2077 2004 Crs
1957 2035 Crs
1846 2067 Crs
1744 2099 Crs
1679 2120 Crs
1577 2120 Crs
1494 2109 Crs
1448 2109 Crs
1448 2194 Crs
1401 2342 Crs
1401 2469 Crs
1392 2575 Crs
1391 2798 Crs
1391 2936 Crs
1400 3084 Crs
1400 3243 Crs
1400 3381 Crs
1427 3604 Crs
1437 3731 Crs
1436 3826 Crs
1473 3996 Crs
1520 4060 Crs
4864 4382 Crs
1.000 UL
LTb
1078 4775 N
0 -4071 V
5725 0 V
0 4071 V
-5725 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
