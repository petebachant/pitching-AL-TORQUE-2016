%!PS-Adobe-2.0 EPSF-2.0
%%Title: CT1.tex
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Sat Mar  5 00:26:32 2016
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (CT1.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (victor)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Mar  5 00:26:32 2016)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
1.000 UL
LTa
1210 704 M
5593 0 V
stroke
LTb
1210 704 M
63 0 V
5530 0 R
-63 0 V
stroke
LTa
1210 1286 M
5593 0 V
stroke
LTb
1210 1286 M
63 0 V
5530 0 R
-63 0 V
stroke
LTa
1210 1867 M
5593 0 V
stroke
LTb
1210 1867 M
63 0 V
5530 0 R
-63 0 V
stroke
LTa
1210 2449 M
5593 0 V
stroke
LTb
1210 2449 M
63 0 V
5530 0 R
-63 0 V
stroke
LTa
1210 3030 M
5593 0 V
stroke
LTb
1210 3030 M
63 0 V
5530 0 R
-63 0 V
stroke
LTa
1210 3612 M
5593 0 V
stroke
LTb
1210 3612 M
63 0 V
5530 0 R
-63 0 V
stroke
LTa
1210 4193 M
5593 0 V
stroke
LTb
1210 4193 M
63 0 V
5530 0 R
-63 0 V
stroke
LTa
1210 4775 M
5593 0 V
stroke
LTb
1210 4775 M
63 0 V
5530 0 R
-63 0 V
stroke
LTa
1210 704 M
0 4071 V
stroke
LTb
1210 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
1909 704 M
0 4071 V
stroke
LTb
1909 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
2608 704 M
0 4071 V
stroke
LTb
2608 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
3307 704 M
0 3568 V
0 440 R
0 63 V
stroke
LTb
3307 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
4007 704 M
0 3568 V
0 440 R
0 63 V
stroke
LTb
4007 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
4706 704 M
0 3568 V
0 440 R
0 63 V
stroke
LTb
4706 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
5405 704 M
0 4071 V
stroke
LTb
5405 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
6104 704 M
0 4071 V
stroke
LTb
6104 704 M
0 63 V
0 4008 R
0 -63 V
stroke
LTa
6803 704 M
0 4071 V
stroke
LTb
6803 704 M
0 63 V
0 4008 R
0 -63 V
stroke
1210 4775 N
0 -4071 V
5593 0 V
0 4071 V
-5593 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UL
LTb
2655 4272 N
0 440 V
2702 0 V
0 -440 V
-2702 0 V
Z stroke
1.000 UP
1.000 UL
LT0
0.00 0.00 1.00 C LTb
LT0
0.00 0.00 1.00 C 4635 4602 M
591 0 V
3760 1189 M
382 54 V
373 270 V
352 456 V
321 570 V
283 600 V
239 549 V
193 439 V
145 297 V
99 144 V
55 -21 V
15 -151 V
-22 -235 V
-59 -286 V
-92 -306 V
5924 3257 L
5780 2951 L
5618 2653 L
5440 2367 L
5251 2091 L
5054 1830 L
4853 1600 L
4647 1411 L
4439 1274 L
-210 -77 V
-212 -14 V
-211 62 V
-211 131 V
-208 199 V
-206 262 V
-200 312 V
-194 351 V
-185 371 V
-173 376 V
-160 359 V
-143 323 V
-123 264 V
-101 181 V
-73 70 V
-44 -41 V
-6 -146 V
38 -241 V
86 -323 V
141 -391 V
195 -439 V
251 -462 V
301 -453 V
343 -401 V
369 -275 V
382 -90 V
3760 1189 Pls
4142 1243 Pls
4515 1513 Pls
4867 1969 Pls
5188 2539 Pls
5471 3139 Pls
5710 3688 Pls
5903 4127 Pls
6048 4424 Pls
6147 4568 Pls
6202 4547 Pls
6217 4396 Pls
6195 4161 Pls
6136 3875 Pls
6044 3569 Pls
5924 3257 Pls
5780 2951 Pls
5618 2653 Pls
5440 2367 Pls
5251 2091 Pls
5054 1830 Pls
4853 1600 Pls
4647 1411 Pls
4439 1274 Pls
4229 1197 Pls
4017 1183 Pls
3806 1245 Pls
3595 1376 Pls
3387 1575 Pls
3181 1837 Pls
2981 2149 Pls
2787 2500 Pls
2602 2871 Pls
2429 3247 Pls
2269 3606 Pls
2126 3929 Pls
2003 4193 Pls
1902 4374 Pls
1829 4444 Pls
1785 4403 Pls
1779 4257 Pls
1817 4016 Pls
1903 3693 Pls
2044 3302 Pls
2239 2863 Pls
2490 2401 Pls
2791 1948 Pls
3134 1547 Pls
3503 1272 Pls
3885 1182 Pls
4930 4602 Pls
1.000 UP
1.000 UL
LT1
1.00 0.65 0.00 C LTb
LT1
1.00 0.65 0.00 C 4635 4382 M
591 0 V
1643 4260 M
-61 -85 V
41 -139 V
7 -62 V
0 -124 V
7 -154 V
20 -78 V
0 -92 V
60 -124 V
1 -108 V
13 -70 V
114 -193 V
61 -46 V
34 -70 V
60 -100 V
101 -69 V
47 -70 V
114 -62 V
114 -84 V
141 -108 V
162 -85 V
87 -85 V
121 -54 V
108 -77 V
40 -70 V
94 -100 V
81 -46 V
60 -62 V
67 -54 V
94 -69 V
189 -163 V
134 -77 V
188 -61 V
87 -31 V
115 -69 V
154 54 V
114 31 V
127 62 V
121 70 V
128 85 V
6 54 V
81 39 V
47 85 V
114 116 V
20 31 V
127 131 V
0 85 V
41 86 V
107 154 V
74 93 V
20 70 V
73 224 V
67 85 V
61 139 V
13 47 V
20 108 V
20 54 V
34 70 V
13 61 V
33 78 V
27 116 V
14 15 V
73 93 V
27 62 V
47 131 V
74 140 V
20 92 V
13 70 V
13 54 V
27 93 V
40 54 V
34 85 V
33 131 V
41 78 V
13 23 V
34 23 V
40 -54 V
47 -85 V
20 -108 V
7 -100 V
-53 -147 V
-47 -55 V
-14 -115 V
-20 -78 V
-13 -139 V
-47 -93 V
-40 -108 V
-54 -124 V
-20 -100 V
-53 -116 V
-27 -78 V
-81 -85 V
-47 -77 V
-33 -62 V
-60 -124 V
-34 -69 V
5646 2642 L
-47 -77 V
-47 -47 V
-94 -92 V
-33 -31 V
-61 -55 V
-80 -77 V
5177 2132 L
-41 -39 V
-87 -54 V
4922 1938 L
-7 -23 V
-94 -70 V
-87 -77 V
-54 -16 V
-74 -77 V
-100 -47 V
-61 -31 V
4304 1481 L
-87 -31 V
-40 -85 V
-128 -8 V
-60 -31 V
-74 8 V
-168 30 V
-87 23 V
-40 8 V
-94 -15 V
-81 23 V
-81 85 V
-107 61 V
-74 62 V
-47 69 V
-54 39 V
-114 108 V
-20 70 V
-121 177 V
-68 108 V
-60 85 V
-94 232 V
-94 131 V
-34 39 V
-47 108 V
-128 185 V
-74 224 V
-61 170 V
-47 108 V
-47 101 V
-87 146 V
-61 124 V
-34 139 V
-67 147 V
-40 77 V
-41 77 V
-47 8 V
1643 4260 Crs
1582 4175 Crs
1623 4036 Crs
1630 3974 Crs
1630 3850 Crs
1637 3696 Crs
1657 3618 Crs
1657 3526 Crs
1717 3402 Crs
1718 3294 Crs
1731 3224 Crs
1845 3031 Crs
1906 2985 Crs
1940 2915 Crs
2000 2815 Crs
2101 2746 Crs
2148 2676 Crs
2262 2614 Crs
2376 2530 Crs
2517 2422 Crs
2679 2337 Crs
2766 2252 Crs
2887 2198 Crs
2995 2121 Crs
3035 2051 Crs
3129 1951 Crs
3210 1905 Crs
3270 1843 Crs
3337 1789 Crs
3431 1720 Crs
3620 1557 Crs
3754 1480 Crs
3942 1419 Crs
4029 1388 Crs
4144 1319 Crs
4298 1373 Crs
4412 1404 Crs
4539 1466 Crs
4660 1536 Crs
4788 1621 Crs
4794 1675 Crs
4875 1714 Crs
4922 1799 Crs
5036 1915 Crs
5056 1946 Crs
5183 2077 Crs
5183 2162 Crs
5224 2248 Crs
5331 2402 Crs
5405 2495 Crs
5425 2565 Crs
5498 2789 Crs
5565 2874 Crs
5626 3013 Crs
5639 3060 Crs
5659 3168 Crs
5679 3222 Crs
5713 3292 Crs
5726 3353 Crs
5759 3431 Crs
5786 3547 Crs
5800 3562 Crs
5873 3655 Crs
5900 3717 Crs
5947 3848 Crs
6021 3988 Crs
6041 4080 Crs
6054 4150 Crs
6067 4204 Crs
6094 4297 Crs
6134 4351 Crs
6168 4436 Crs
6201 4567 Crs
6242 4645 Crs
6255 4668 Crs
6289 4691 Crs
6329 4637 Crs
6376 4552 Crs
6396 4444 Crs
6403 4344 Crs
6350 4197 Crs
6303 4142 Crs
6289 4027 Crs
6269 3949 Crs
6256 3810 Crs
6209 3717 Crs
6169 3609 Crs
6115 3485 Crs
6095 3385 Crs
6042 3269 Crs
6015 3191 Crs
5934 3106 Crs
5887 3029 Crs
5854 2967 Crs
5794 2843 Crs
5760 2774 Crs
5646 2642 Crs
5599 2565 Crs
5552 2518 Crs
5458 2426 Crs
5425 2395 Crs
5364 2340 Crs
5284 2263 Crs
5177 2132 Crs
5136 2093 Crs
5049 2039 Crs
4922 1938 Crs
4915 1915 Crs
4821 1845 Crs
4734 1768 Crs
4680 1752 Crs
4606 1675 Crs
4506 1628 Crs
4445 1597 Crs
4304 1481 Crs
4217 1450 Crs
4177 1365 Crs
4049 1357 Crs
3989 1326 Crs
3915 1334 Crs
3747 1364 Crs
3660 1387 Crs
3620 1395 Crs
3526 1380 Crs
3445 1403 Crs
3364 1488 Crs
3257 1549 Crs
3183 1611 Crs
3136 1680 Crs
3082 1719 Crs
2968 1827 Crs
2948 1897 Crs
2827 2074 Crs
2759 2182 Crs
2699 2267 Crs
2605 2499 Crs
2511 2630 Crs
2477 2669 Crs
2430 2777 Crs
2302 2962 Crs
2228 3186 Crs
2167 3356 Crs
2120 3464 Crs
2073 3565 Crs
1986 3711 Crs
1925 3835 Crs
1891 3974 Crs
1824 4121 Crs
1784 4198 Crs
1743 4275 Crs
1696 4283 Crs
4930 4382 Crs
1.000 UL
LTb
1210 4775 N
0 -4071 V
5593 0 V
0 4071 V
-5593 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
